"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_app_api_supabase_auth_index_js";
exports.ids = ["_rsc_src_app_api_supabase_auth_index_js"];
exports.modules = {

/***/ "(rsc)/./src/app/api/supabase/auth/index.js":
/*!********************************************!*\
  !*** ./src/app/api/supabase/auth/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   forgotPassword: () => (/* binding */ forgotPassword),\n/* harmony export */   getUser: () => (/* binding */ getUser),\n/* harmony export */   login: () => (/* binding */ login),\n/* harmony export */   resend: () => (/* binding */ resend),\n/* harmony export */   resetPassword: () => (/* binding */ resetPassword),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   signUp: () => (/* binding */ signUp),\n/* harmony export */   verifyOtp: () => (/* binding */ verifyOtp)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/enum */ \"(rsc)/./src/enum.js\");\n/* harmony import */ var _utils_supabase_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/supabase/server */ \"(rsc)/./src/utils/supabase/server.js\");\n// @next\n\n// @project\n\n\nconst supabase = (0,_utils_supabase_server__WEBPACK_IMPORTED_MODULE_2__.createSupabaseClient)();\nasync function login(request) {\n    try {\n        const body = await request.json();\n        const payload = {\n            email: body.email,\n            password: body.password\n        };\n        const { data, error } = await supabase.auth.signInWithPassword(payload);\n        if (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            id: data.user?.id,\n            email: data.user?.email || '',\n            contact: data.user?.user_metadata?.contact,\n            dialcode: data.user?.user_metadata?.dialcode,\n            firstname: data.user?.user_metadata?.firstname,\n            lastname: data.user?.user_metadata?.lastname,\n            access_token: data.session?.access_token\n        }, {\n            status: 200\n        });\n    } catch  {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function getUser(token) {\n    try {\n        const { data, error } = await supabase.auth.getUser(token);\n        if (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            id: data.user.id,\n            email: data.user.email || '',\n            role: data.user.user_metadata.role,\n            contact: data.user.user_metadata.contact,\n            dialcode: data.user.user_metadata.dialcode,\n            firstname: data.user.user_metadata.firstname,\n            lastname: data.user.user_metadata.lastname\n        }, {\n            status: 200\n        });\n    } catch  {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function signUp(request) {\n    try {\n        const body = await request.json();\n        const { error } = await supabase.auth.signUp({\n            email: body.email,\n            password: body.password,\n            options: {\n                data: {\n                    firstname: body.firstname,\n                    lastname: body.lastname,\n                    dialcode: body.dialcode,\n                    contact: body.contact,\n                    role: _enum__WEBPACK_IMPORTED_MODULE_1__.AuthRole.USER\n                }\n            }\n        });\n        if (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 400\n            });\n        }\n        // Success\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: 200\n        });\n    } catch  {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function verifyOtp(request) {\n    try {\n        const body = await request.json();\n        const payload = {\n            email: body.email,\n            token: body.otp,\n            type: body.type\n        };\n        // Verify OTP\n        const { error } = await supabase.auth.verifyOtp(payload);\n        if (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 400\n            });\n        }\n        // Success\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: 200\n        });\n    } catch  {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function resend(request) {\n    try {\n        const body = await request.json();\n        const payload = {\n            email: body.email,\n            type: body.type\n        };\n        const { error } = await supabase.auth.resend(payload);\n        if (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 400\n            });\n        }\n        // Success\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: 200\n        });\n    } catch  {\n        // Internal Server Error\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function forgotPassword(request) {\n    try {\n        const body = await request.json();\n        const { error } = await supabase.auth.resetPasswordForEmail(body.email, {\n            redirectTo: body.redirectTo\n        });\n        if (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 400\n            });\n        }\n        // Success\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: 200\n        });\n    } catch  {\n        // Internal Server Error\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function resetPassword(request) {\n    try {\n        const body = await request.json();\n        // To reset a password in Supabase, first you need to set a session, and then only you can update the user.\n        // After successful user update, sign out from Supabase so that we can prevent the user from resetting the password again with the same link.\n        const { error: sessionError } = await supabase.auth.setSession({\n            access_token: body.accessToken,\n            refresh_token: body.refreshToken\n        });\n        if (sessionError) {\n            // Bad Request\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        const { error } = await supabase.auth.updateUser({\n            password: body.password\n        });\n        if (error) {\n            // Bad Request\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 400\n            });\n        }\n        await supabase.auth.signOut();\n        // // Success\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: 200\n        });\n    } catch  {\n        // Internal Server Error\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function signOut() {\n    try {\n        await supabase.auth.signOut();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: 200\n        });\n    } catch  {\n        // Internal Server Error\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Server error'\n        }, {\n            status: 500\n        });\n    }\n}\n// Export as a single object for easy import\nconst mockAuth = {\n    login,\n    getUser,\n    signUp,\n    verifyOtp,\n    resend,\n    forgotPassword,\n    resetPassword,\n    signOut\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mockAuth);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/supabase/auth/index.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/supabase/server.js":
/*!**************************************!*\
  !*** ./src/utils/supabase/server.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSupabaseClient: () => (/* binding */ createSupabaseClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nfunction createSupabaseClient() {\n    if (process.env.NEXT_PUBLIC_SUPABASE_URL && process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n    } else {\n        throw new Error('Supabase URL and anon key are required.');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvdXRpbHMvc3VwYWJhc2Uvc2VydmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBRTlDLFNBQVNDO0lBQ2QsSUFBSUMsUUFBUUMsR0FBRyxDQUFDQyx3QkFBd0IsSUFBSUYsUUFBUUMsR0FBRyxDQUFDRSw2QkFBNkIsRUFBRTtRQUNyRixPQUFPTCxtRUFBWUEsQ0FBQ0UsUUFBUUMsR0FBRyxDQUFDQyx3QkFBd0IsRUFBRUYsUUFBUUMsR0FBRyxDQUFDRSw2QkFBNkI7SUFDckcsT0FBTztRQUNMLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvZ2F1cmF2cGFuZGV5L0RvY3VtZW50cy93b3JrLzAxLXByb2plY3QvY29tcGx5QUkvQ29tcGx5QUktQXBwL3NyYy91dGlscy9zdXBhYmFzZS9zZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1cGFiYXNlQ2xpZW50KCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMICYmIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUNsaWVudChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwsIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1N1cGFiYXNlIFVSTCBhbmQgYW5vbiBrZXkgYXJlIHJlcXVpcmVkLicpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwiY3JlYXRlU3VwYWJhc2VDbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/supabase/server.js\n");

/***/ })

};
;